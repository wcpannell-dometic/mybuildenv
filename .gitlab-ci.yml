stages:
  - build
  - test
  - release

include:
  - template: Security/Secret-Detection.gitlab-ci.yml


build-job:       # This job runs in the build stage, which runs first.
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
  rules:
    - if: $CI_COMMIT_TAG

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - echo "No lint issues found."

release-image:      # This job runs in the deploy stage.
  stage: release  # It only runs when *both* jobs in the test stage complete successfully.
  image: 
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  script:
    - echo "Retag commit as latest!"
    - echo "$CI_REGISTRY_PASSWORD" | crane auth login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin
    - crane tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG} latest
  only:
    - tags
  except:
    - branches